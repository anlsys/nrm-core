stages:
  - source
  - lib
  - afterlib
  - codegen
  - linked

black:
  stage: source
  script:
    - |
      nix-shell default.nix -A pynrm-hack --run bash << EOF
      black pynrm/bin/*.py --check
      black pynrm/nrm/* --check
      EOF
  tags:
    - integration

clang-format:
  stage: source
  script:
    - |
      nix-shell default.nix -A libnrm-hack --run bash << EOF
      pwd
      for F in libnrm/src/*.c; do
        clang-format < \$F | cmp -s \$F -
        if [ $? -ne 0 ]; then
          echo "[!] $FILE does not respect the agreed coding style." >&2
          RETURN=1
        fi
      done
      EOF
  tags:
  - integration

nrm.so:
  stage: lib
  script: nix-build -A haskellPackages.nrmlib
  tags:
  - integration

doc:
  stage: afterlib
  script:
    - nix-build -A haskellPackages.nrmlib.doc -o result-doc
    - cp -r result-doc/* result-doc-cp
    - rm -f result-doc
    - chmod -R +r result-doc-cp
  artifacts:
    paths:
      - result-doc-cp/*
    expire_in: 1 week
    when: always
  tags:
  - integration

binaries:
  stage: afterlib
  script: nix-build -A haskellPackages.nrmbin
  tags:
  - integration

resources:
  stage: codegen
  script: nix-build -A resources
  tags:
  - integration

libnrm:
  stage: linked
  script: nix-build -A libnrm
  tags:
  - integration

pynrm:
  stage: linked
  script: nix-build -A pynrm
  tags:
  - integration
