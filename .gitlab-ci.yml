variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - source
  - build
  - tests
  - vendoring
  - deploy

autotools:libnrm:
  stage: build
  tags:
    - kvm
    - nix
  script:
    - |
      nix-shell -E '
        let pkgs = (import ./default.nix {});
        in pkgs.libnrm.overrideAttrs (o:{
          preBuild="";
        })
      ' --run bash <<< '
        set -e
        cd libnrm
        ./autogen.sh
        ./configure --enable-pmpi CC=mpicc FC=mpifort CFLAGS=-fopenmp
        make
      '

#nix-build:libnrm:
  #stage: build
  #tags:
    #- kvm
    #- nix
  #script: nix-build -A libnrm --no-build-output

#nix-build:pynrm:
  #stage: build
  #tags:
    #- kvm
    #- nix
  #script: nix-build -A pynrm --no-build-output

nix-build:app-stream:
  stage: build
  tags:
    - kvm
    - nix
  script: nix-build -A stream --no-build-output

#nix-build:nrmFull:
  #stage: build
  #tags:
    #- kvm
    #- nix
  #script: nix-build -A nrm --no-build-output

#dhrun:hello:
  #stage: tests
  #tags:
    #- kvm
    #- nix
  #script: nix-shell -p gnumake --run "make dhrun-hello"

#dhrun:exitcode:
  #stage: tests
  #tags:
    #- kvm
    #- nix
  #script: nix-shell -p gnumake --run "make dhrun-exitcode"

#dhrun:listen:
  #stage: tests
  #tags:
    #- kvm
    #- nix
  #script: nix-shell -p gnumake --run "make dhrun-listen"

#readthedocs:
  #stage: deploy
  #when: on_success
  #only:
    #- master
    #- staging
  #tags:
    #- kvm
    #- nix
  #script:
    #- echo "token=$RTD_TOKEN"
    #- nix run nixpkgs.curl -c curl --fail -X POST -d "token=$RTD_TOKEN" readthedocs.org/api/v2/webhook/hnrm/104604/

make:black:
  stage: source
  tags:
    - kvm
    - nix
  script:
    - cd pynrm
    - nix-shell -p gnumake --run "make black"

make:hsnrm.nix:
  stage: source
  tags:
    - kvm
    - nix
  script:
    - cd hsnrm
    - nix-shell -p gnumake --run "make hsnrm.nix"

make:hsnrm.cabal:
  stage: source
  tags:
    - kvm
    - nix
  script:
    - cd hsnrm
    - nix-shell -p gnumake --run "make hsnrm.cabal"

make:ormolu:
  stage: source
  tags:
    - kvm
    - nix
  script:
    - cd hsnrm
    - nix-shell -p gnumake --run "make ormolu"

make:hlint:
  stage: source
  tags:
    - kvm
    - nix
  script:
    - cd hsnrm
    - nix-shell -p gnumake --run "make hlint"

make:shellcheck:
  stage: source
  tags:
    - kvm
    - nix
  script:
    - cd hsnrm
    - nix-shell -p gnumake --run "make shellcheck"

make:dhall-format:
  stage: source
  tags:
    - kvm
    - nix
  script:
    - cd hsnrm
    - nix-shell -p gnumake --run "make dhall-format"

make:resources:
  stage: build
  tags:
    - kvm
    - nix
  script:
    - cd hsnrm
    - nix-shell -p gnumake --run "make resources"

nix:package:
  stage: build
  tags:
    - kvm
    - nix
  script:
    - cd hsnrm
    - nix-build -A hsnrm --no-build-output

make:doc:
  stage: build
  tags:
    - kvm
    - nix
  script:
    - cd hsnrm
    - nix-shell -p gnumake --run "make doc"

