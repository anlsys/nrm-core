stages:
  - source
  - lib
  - afterlib
  - codegen
  - linked

ormolu:
  stage: source
  tags:
    - integration
  script:
    - |
      nix-shell --pure -E '
        let pkgs = (import ./.);
        in pkgs.mkShell {
          buildInputs = [pkgs.fd pkgs.ormolu];
          shellHook =
            "export LOCALE_ARCHIVE=${pkgs.glibcLocales}/lib/locale/locale-archive \n" +
            "export LANG=en_US.UTF-8";
        }
      ' --run bash <<< '
        RETURN=0
        cd hsnrm
        for F in $(fd -e hs); do
          ormolu -o -XTypeApplications -m check $F
          if [ $? -ne 0 ]; then
            echo "[!] $F does not pass ormolu haskell format check." >&2
            RETURN=1
          fi
        done
        if [ $RETURN -ne 0 ]; then exit 1; fi
      '

hlint:
  stage: source
  tags:
    - integration
  script:
    - nix-shell --pure -p '(import ./.).hlint' --run bash <<< 'hlint hsnrm/ --hint=./.hlint.yaml'

black:
  stage: source
  tags:
    - integration
  script:
    - |
      nix-shell --pure -p '(import ./.).nrmPythonPackages.black' --run bash <<< '
        black pynrm/bin/* --check
        black pynrm/nrm/*.py --check
      '

clang-format:
  stage: source
  tags:
    - integration
  script:
    - |
      nix-shell --pure -p '(import ./.).fd' '(import ./.).clang-tools' --run bash <<< '
        RETURN=0
        cd libnrm
        for F in $(fd -e c); do
          clang-format < $F | cmp -s $F -
          if [ $? -ne 0 ]; then
            echo "[!] $F does not pass clang-format format check." >&2
            RETURN=1
          fi
        done
        if [ $RETURN -ne 0 ]; then exit 1; fi
      '

nix-build-nrm.so:
  stage: lib
  tags:
    - integration
  script: nix-build -A haskellPackages.nrmlib --no-build-output

nix-build-binaries:
  stage: afterlib
  tags:
    - integration
  script: nix-build -A haskellPackages.nrmbin --no-build-output

nix-build-resources:
  stage: codegen
  tags:
    - integration
  script: nix-build -A resources --no-build-output

nix-build-libnrm:
  stage: linked
  tags:
    - integration
  script: nix-build -A libnrm --no-build-output

nix-build-pynrm:
  stage: linked
  tags:
    - integration
  script: nix-build -A pynrm --no-build-output
