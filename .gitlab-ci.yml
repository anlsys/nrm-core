stages:
  - source
  - lib
  - afterlib
  - codegen
  - linked

ormolu:
  stage: source
  script:
    - |
      nix-shell -p '
      (import ./default.nix).fd
      ' '
      (import ./default.nix).ormolu
      ' --run bash <<< '
      RETURN=0
      cd hsnrm
      for F in $(fd -e hs); do
        ormolu -o -XTypeApplications -m check $F
        if [ $? -ne 0 ]; then
          echo "[!] $F does not pass ormolu haskell format check."  >&2
          RETURN=1
        fi
      done
      if [ $RETURN -ne 0 ]; then
        exit 1
      fi
      '
  tags:
  - integration

hlint:
  stage: source
  script:
    - |
      nix-shell -p '
        (import ./default.nix).hlint
      ' --run bash << EOF
      cd hsnrm
      hlint .
      EOF
  tags:
    - integration

black:
  stage: source
  script:
    - |
      nix-shell -p '
        (import ./default.nix).nrmPythonPackages.black
      ' --run bash << EOF
      black pynrm/bin/* --check
      black pynrm/nrm/*.py --check
      EOF
  tags:
    - integration

clang-format:
  stage: source
  script:
    - |
      nix-shell -p '
      (import ./default.nix).fd
      ' '
      (import ./default.nix).clang-tools
      ' --run bash <<< '
      RETURN=0
      cd libnrm
      for F in $(fd -e c); do
        clang-format < $F | cmp -s $F -
        if [ $? -ne 0 ]; then
          echo "[!] $F does not pass clang-format format check."  >&2
          RETURN=1
        fi
      done
      if [ $RETURN -ne 0 ]; then
        exit 1
      fi'
  tags:
  - integration

nrm.so:
  stage: lib
  script: nix-build -A haskellPackages.nrmlib
  tags:
  - integration

doc:
  stage: afterlib
  script:
    - |
      nix-build -A haskellPackages.nrmlib.doc
      cp -r result-doc/* result-doc-cp
      rm -f result-doc
      chmod -R +r result-doc-cp
  artifacts:
    paths:
      - result-doc-cp/*
    expire_in: 1 week
    when: always
  tags:
  - integration

binaries:
  stage: afterlib
  script: nix-build -A haskellPackages.nrmbin
  tags:
  - integration

resources:
  stage: codegen
  script: nix-build -A resources
  tags:
  - integration

libnrm:
  stage: linked
  script: nix-build -A libnrm
  tags:
  - integration

pynrm:
  stage: linked
  script: nix-build -A pynrm
  tags:
  - integration
