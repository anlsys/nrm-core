# (generated with --quick)

import nri.types.definitions
import nri.types.internal.definitions
from typing import Callable, Optional, SupportsInt, Type, TypeVar, Union

Path: Type[nri.types.internal.definitions.Path]
_Return: Type[nri.types.definitions._Return]
_Time: Type[nri.types.definitions._Time]
t: module

a = TypeVar('a')
b = TypeVar('b')

def fmapOpt(f: Callable[[a], b], ma: Optional[a]) -> Optional[b]: ...
def fmapOpt_(f: Callable[[a], None], ma: Optional[a]) -> None: ...
def mkTime(s: Union[str, SupportsInt]) -> nri.types.definitions._Time: ...
def readBool(fn: nri.types.internal.definitions.Path) -> bool: ...
def readInt(fn: nri.types.internal.definitions.Path) -> int: ...
def readStr(fn: nri.types.internal.definitions.Path) -> str: ...
def time() -> nri.types.definitions._Time: ...
def tryOpt(f: Callable[[], a]) -> Optional[a]: ...
def unpackOpt(opt: Optional[nri.types.definitions._Return], x: nri.types.definitions._Return) -> nri.types.definitions._Return: ...
def writeInt(fn: nri.types.internal.definitions.Path, val: int) -> None: ...
